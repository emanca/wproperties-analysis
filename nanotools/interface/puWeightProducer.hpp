#ifndef PUWEIGHTPRODUCER_H
#define PUWEIGHTPRODUCER_H

#include "module.hpp"
#include "TString.h"
#include "TFile.h"
#include<vector>
#include<string>
class puWeightProducer : public Module
{

private:
    TFile *_puMC;
    TFile *_puData;
    TH1D *_hmc;
    TH1D *_hdata;
    bool _dosyst;
    bool _fixlargeW;
    bool _normtoArea;
    TH1D* _nompuwtH;
    int _era;
    bool _fromHisto;

    double _pileupWeights_2016UL_preVFP[100] = {0.017891859791232846, 0.25164270158539037, 0.7328704571739738, 0.8181251564460522, 0.8649406472442838, 0.5020328254845017, 0.2658104554235502, 0.25291785415248746, 0.43067445087530876, 0.5807375723700408, 0.7389514962080089, 0.8638650142763253, 0.9396099928679109, 0.9868029206345122, 1.0196162822425623, 1.0588761189937739, 1.094898081939306, 1.127276742027867, 1.149414736534094, 1.161488702664545, 1.1573768695552893, 1.140958539701416, 1.1235625472598643, 1.1081928436148043, 1.0893527771484866, 1.06450924232797, 1.025793115894688, 0.9746156509680088, 0.9186728763168767, 0.8616085351610866, 0.8020484997740417, 0.7445213151217449, 0.6912429884481729, 0.6402308026900916, 0.5893401409704421, 0.5405190531190912, 0.4935088544982941, 0.4467075390612075, 0.400872887447364, 0.3570491413946734, 0.31357528032369686, 0.2736781052187231, 0.2375036546212086, 0.2058278731154476, 0.18003241229641784, 0.15153863589379638, 0.12968940637544868, 0.10682015753856883, 0.0894323307837256, 0.07452733858657992, 0.06777639972884231, 0.07298084541281942, 0.08950648766178804, 0.12260107330067226, 0.19384713077284463, 0.2615885627432867, 0.3660971270237179, 0.4535015485650514, 0.6361173877919268, 0.9375635292635457, 1.209396722848853, 1.4619395406726488, 1.6359665710892473, 2.447616386237363, 1.8923192890766891, 2.4418060236344252, 5.0, 4.512706593240671, 5.0, 1.0, 1.0, 3.529756976636144, 5.0, 1.0, 1.0, 4.924548597100737, 1.0, 1.0, 1.0, 5.0, 0.7766971440272932, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};

   double _pileupWeights_2016UL_postVFP[100] = {1.4121640872041221, 0.5898511462462072, 1.0186345612199057, 0.730896932534784, 0.6625906412478361, 0.373128877493089, 0.15202831320083082, 0.10810730190416742, 0.07922625145984823, 0.05412342031906427, 0.14377404335405167, 0.34244424125458106, 0.5009390258406541, 0.5858261792960938, 0.6415575114065856, 0.7087553686702128, 0.7632803248061507, 0.7922900511232938, 0.79791290590669, 0.8040725702550436, 0.837776272330411, 0.8992865658393996, 0.9622224459286195, 1.0101762330880721, 1.0505710052018327, 1.1002458975776779, 1.160152637272387, 1.2303177838850345, 1.3121316684401438, 1.399730491999252, 1.4803639433958555, 1.555545145192651, 1.62951843812034, 1.7006707124728095, 1.766838609765344, 1.8382375612180932, 1.9197947496434073, 2.008033481757116, 2.1037955476243497, 2.2073425542550345, 2.299520727318126, 2.39195308241725, 2.480611355126296, 2.570845679574736, 2.6856231319335375, 2.6895659148729645, 2.7170021459898392, 2.5991989807089486, 2.4413565237114865, 2.1175342531673946, 1.7286310371345444, 1.328305769847878, 0.9074697528382656, 0.5759813346926844, 0.3791280909476406, 0.2009268885008322, 0.10690147967822879, 0.0494866019105493, 0.025804167809444428, 0.014219209393874692, 0.006970784343273052, 0.003290065597384393, 0.0014923751883421411, 0.0009483513777169922, 0.0003281848478328599, 0.00019967886362757994, 0.0005765101556252217, 9.283233427021984e-05, 7.6901988053659e-05, 1.0, 1.0, 5.55519172322179e-06, 7.2808080984987366e-06, 1.0, 1.0, 5.607454368413037e-07, 1.0, 1.0, 1.0, 5.631509273014954e-08, 2.7009051699005925e-09, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};

   double _pileupWeights_2016UL_all[100] = {0.6589867265263256, 0.407153005452541, 0.8642665336352487, 0.7780170875306136, 0.7718988813841754, 0.44276200466885046, 0.21349273305130528, 0.18633307976609584, 0.26907642709007246, 0.3385971761172566, 0.4652852764274064, 0.6241125653491979, 0.737906409006983, 0.8024313714506003, 0.8457825555557247, 0.8978884643903559, 0.9424182163604483, 0.9732478201709418, 0.9877920527908223, 0.9971465869206139, 1.0104225673337546, 1.029836293392211, 1.0493773854755748, 1.0631242087901378, 1.0715206820747583, 1.0809411741877695, 1.087572442599078, 1.0921890499092428, 1.099587626637935, 1.109040290182502, 1.113942074345191, 1.1174350144952392, 1.1226677579743707, 1.1278275354344371, 1.1307611124930197, 1.137217931323903, 1.1493238007450803, 1.1646147220938796, 1.1838871040556067, 1.207825328150971, 1.2267250990262277, 1.2476738483134555, 1.268898244611795, 1.293277472733083, 1.3321182940320204, 1.318539045280375, 1.319351570903305, 1.2528311287666474, 1.1708614071082524, 1.0139143678128297, 0.8314474831080699, 0.6501868955062319, 0.4656109815851464, 0.3310680803476131, 0.2790404453468702, 0.23369595525977435, 0.2469173888590991, 0.26773301406225, 0.3554916500496387, 0.513004184209515, 0.6565139488475376, 0.7912436231532053, 0.8844253754740058, 1.3226235140320606, 1.0223702497271776, 1.3191405473774638, 5.0, 2.437779286510053, 3.8756227608092186, 1.0, 1.0, 1.906755763065583, 4.76272763315208, 1.0, 1.0, 2.6602114002279516, 1.0, 1.0, 1.0, 4.269141635962611, 0.419567065322298, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};

    
  
public:
  puWeightProducer(std::string hmcName, std::string hdataName, bool dosyst, bool fixlargeW, bool normtoArea)
    {
      _fromHisto=true;
      _era=0;
      _puData = TFile::Open("../Common/data/PileupData_2016Legacy_all2016.root");
      _puMC = TFile::Open("../Common/data/PileupMC_2016Legacy.root");
      _dosyst = dosyst;
      _fixlargeW = fixlargeW;
      _normtoArea = normtoArea;
      _hmc = (TH1D *)_puMC->Get(hmcName.c_str());
      //_hmc->SetDirectory(0);
      _hdata = (TH1D *)_puData->Get(hdataName.c_str());
      //_hdata->SetDirectory(0);

      _nompuwtH = ratio(_hmc, _hdata, "nom");
    };

  puWeightProducer(int era)
    {
      _fromHisto=false;
      _era=era;
    };

  ~puWeightProducer(){
    
  };
  
  RNode run(RNode) override;
  RNode getfromHisto(RNode);
  RNode getfromArray(RNode);
  
  TH1D* ratio(TH1D*,  TH1D*, TString); 
  void fixLargeWeights(std::vector<float> &weights, const std::vector<float> refvals, float maxshift,float hardmax);
  float checkIntegral(std::vector<float> wgt1, std::vector<float> wgt2, const std::vector<float> refvals);
};

#endif
